Starting nREPL server...
/Library/Java/JavaVirtualMachines/jdk1.8.0_111.jdk/Contents/Home/bin/java -Dfile.encoding=UTF-8 -XX:-OmitStackTraceInFastThrow -Dclojure.compile.path=/Users/chenfei/Documents/Java/MyGridGain/my-grid-plus/target/classes -Dmy-grid-plus.version=0.1.0-SNAPSHOT -Dclojure.debug=false -classpath /Users/chenfei/Documents/Java/MyGridGain/my-grid-plus/test/main/clojure:/Users/chenfei/Documents/Java/MyGridGain/my-grid-plus/test/main/java:/Users/chenfei/Documents/Java/MyGridGain/my-grid-plus/src/main/clojure:/Users/chenfei/Documents/Java/MyGridGain/my-grid-plus/dev-resources:/Users/chenfei/Documents/Java/MyGridGain/my-grid-plus/resources:/Users/chenfei/Documents/Java/MyGridGain/my-grid-plus/target/classes:/Users/chenfei/.m2/repository/nrepl/nrepl/0.6.0/nrepl-0.6.0.jar:/Users/chenfei/.m2/repository/org/checkerframework/checker-qual/2.0.0/checker-qual-2.0.0.jar:/Users/chenfei/.m2/repository/clojure-complete/clojure-complete/0.2.5/clojure-complete-0.2.5.jar:/Users/chenfei/.m2/repository/org/gridgain/ignite-spring/8.7.24/ignite-spring-8.7.24.jar:/Users/chenfei/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar:/Users/chenfei/.m2/repository/commons-codec/commons-codec/1.12/commons-codec-1.12.jar:/Users/chenfei/.m2/repository/org/quartz-scheduler/quartz/2.3.2/quartz-2.3.2.jar:/Users/chenfei/.m2/repository/org/locationtech/jts/jts-core/1.15.0/jts-core-1.15.0.jar:/Users/chenfei/.m2/repository/org/gridgain/ignite-shmem/8.7.3/ignite-shmem-8.7.3.jar:/Users/chenfei/.m2/repository/org/slf4j/slf4j-api/1.6.4/slf4j-api-1.6.4.jar:/Users/chenfei/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/chenfei/.m2/repository/org/gridgain/ignite-h2/8.7.24/ignite-h2-8.7.24.jar:/Users/chenfei/.m2/repository/org/springframework/spring-aop/4.3.25.RELEASE/spring-aop-4.3.25.RELEASE.jar:/Users/chenfei/.m2/repository/org/codehaus/mojo/animal-sniffer-annotations/1.14/animal-sniffer-annotations-1.14.jar:/Users/chenfei/.m2/repository/org/springframework/spring-core/4.3.25.RELEASE/spring-core-4.3.25.RELEASE.jar:/Users/chenfei/.m2/repository/org/apache/lucene/lucene-analyzers-common/7.4.0/lucene-analyzers-common-7.4.0.jar:/Users/chenfei/.m2/repository/com/mchange/mchange-commons-java/0.2.15/mchange-commons-java-0.2.15.jar:/Users/chenfei/.m2/repository/org/apache/httpcomponents/httpclient/4.5.6/httpclient-4.5.6.jar:/Users/chenfei/.m2/repository/junit/junit/4.11/junit-4.11.jar:/Users/chenfei/.m2/repository/org/apache/thrift/libthrift/0.12.0/libthrift-0.12.0.jar:/Users/chenfei/.m2/repository/org/gridgain/ignite-indexing/8.7.24/ignite-indexing-8.7.24.jar:/Users/chenfei/.m2/repository/org/ow2/asm/asm/5.2/asm-5.2.jar:/Users/chenfei/.m2/repository/org/springframework/spring-jdbc/4.3.25.RELEASE/spring-jdbc-4.3.25.RELEASE.jar:/Users/chenfei/.m2/repository/org/apache/lucene/lucene-queryparser/7.4.0/lucene-queryparser-7.4.0.jar:/Users/chenfei/.m2/repository/com/mchange/c3p0/0.9.5.4/c3p0-0.9.5.4.jar:/Users/chenfei/.m2/repository/org/springframework/spring-expression/4.3.25.RELEASE/spring-expression-4.3.25.RELEASE.jar:/Users/chenfei/.m2/repository/org/clojure/core.async/1.1.587/core.async-1.1.587.jar:/Users/chenfei/.m2/repository/com/google/code/gson/gson/2.8.2/gson-2.8.2.jar:/Users/chenfei/.m2/repository/org/clojure/core.cache/0.8.2/core.cache-0.8.2.jar:/Users/chenfei/.m2/repository/org/clojure/tools.analyzer/1.0.0/tools.analyzer-1.0.0.jar:/Users/chenfei/.m2/repository/javax/cache/cache-api/1.0.0/cache-api-1.0.0.jar:/Users/chenfei/.m2/repository/org/apache/httpcomponents/httpcore/4.4.1/httpcore-4.4.1.jar:/Users/chenfei/.m2/repository/org/clojure/core.memoize/0.8.2/core.memoize-0.8.2.jar:/Users/chenfei/.m2/repository/com/google/j2objc/j2objc-annotations/1.1/j2objc-annotations-1.1.jar:/Users/chenfei/.m2/repository/org/jetbrains/annotations/16.0.3/annotations-16.0.3.jar:/Users/chenfei/.m2/repository/org/springframework/spring-beans/4.3.25.RELEASE/spring-beans-4.3.25.RELEASE.jar:/Users/chenfei/.m2/repository/org/clojure/tools.analyzer.jvm/1.0.0/tools.analyzer.jvm-1.0.0.jar:/Users/chenfei/.m2/repository/org/springframework/spring-context/4.3.25.RELEASE/spring-context-4.3.25.RELEASE.jar:/Users/chenfei/.m2/repository/org/apache/lucene/lucene-queries/7.4.0/lucene-queries-7.4.0.jar:/Users/chenfei/.m2/repository/org/clojure/spec.alpha/0.2.176/spec.alpha-0.2.176.jar:/Users/chenfei/.m2/repository/org/clojure/core.specs.alpha/0.2.44/core.specs.alpha-0.2.44.jar:/Users/chenfei/.m2/repository/org/clojure/data.priority-map/0.0.7/data.priority-map-0.0.7.jar:/Users/chenfei/.m2/repository/com/google/errorprone/error_prone_annotations/2.1.3/error_prone_annotations-2.1.3.jar:/Users/chenfei/.m2/repository/javax/servlet/javax.servlet-api/3.1.0/javax.servlet-api-3.1.0.jar:/Users/chenfei/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar:/Users/chenfei/.m2/repository/commons-logging/commons-logging/1.1.1/commons-logging-1.1.1.jar:/Users/chenfei/.m2/repository/org/apache/lucene/lucene-core/7.4.0/lucene-core-7.4.0.jar:/Users/chenfei/.m2/repository/com/google/guava/guava/25.1-jre/guava-25.1-jre.jar:/Users/chenfei/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/Users/chenfei/.m2/repository/org/gridgain/ignite-core/8.7.24/ignite-core-8.7.24.jar:/Users/chenfei/.m2/repository/org/springframework/spring-tx/4.3.25.RELEASE/spring-tx-4.3.25.RELEASE.jar:/Users/chenfei/.m2/repository/org/apache/lucene/lucene-sandbox/7.4.0/lucene-sandbox-7.4.0.jar:/Users/chenfei/.m2/repository/com/zaxxer/HikariCP-java7/2.4.13/HikariCP-java7-2.4.13.jar clojure.main -i /private/var/folders/lx/ff4rbzj10fb35yvljzngf4g80000gn/T/form-init838209719939574891.clj
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF-8
Compiling org.gridgain.plus.dml.my-update
Connecting to local nREPL server...
nREPL server started on port 49191 on host 127.0.0.1 - nrepl://127.0.0.1:49191
Clojure 1.10.1
(require
    '[org.gridgain.plus.dml.my-select :as my-select]
    '[org.gridgain.plus.dml.my-insert :as my-insert]
    '[org.gridgain.plus.dml.my-update :as my-update]
    '[org.gridgain.plus.dml.select-lexical :as my-lexical]
    '[org.gridgain.plus.context.my-context :as my-context]
    '[clojure.core.reducers :as r]
    '[clojure.string :as str]
    '[clojure.walk :as w])
(import (org.apache.ignite Ignite IgniteCache)
        (org.apache.ignite.internal IgnitionEx)
        (com.google.common.base Strings)
        (org.tools MyConvertUtil)
        (cn.plus.model MyCacheEx MyKeyValue MyLogCache SqlType)
        (cn.plus.tools KvSql)
        (org.gridgain.dml.util MyCacheExUtil)
        (cn.plus.model.db MyScenesCache)
        (org.apache.ignite.configuration CacheConfiguration)
        (org.apache.ignite.cache CacheMode CacheAtomicityMode)
        (org.apache.ignite.cache.query FieldsQueryCursor SqlFieldsQuery)
        (org.apache.ignite.binary BinaryObjectBuilder BinaryObject)
        (org.gridgain.meta.cache MyContextCacheUtil)
        (org.gridgain.mydml MyTransUtil)
        (java.util ArrayList Date Iterator)
        (java.sql Timestamp)
        (java.math BigDecimal)
        )
=> nil
=> cn.plus.model.scene.MyInputParamEx

(def ignite (IgnitionEx/start "/Users/chenfei/Documents/Java/MyPlus/my-plus-deploy/src/main/resources/default-config.xml"))

九月 12, 2021 10:05:49 上午 java.util.logging.LogManager$RootLogger log
警告: Failed to resolve default logging config file: config/java.util.logging.properties
[10:05:49]    __________  ________________
[10:05:49]   /  _/ ___/ |/ /  _/_  __/ __/
[10:05:49]  _/ // (7 7    // /  / / / _/
[10:05:49] /___/\___/_/|_/___/ /_/ /___/
[10:05:49]
[10:05:49] ver. 8.7.24#20210912-sha1:DEV
[10:05:49] 2021 Copyright(C) GridGain Systems, Inc. and Contributors
[10:05:49]
[10:05:49] Ignite documentation: http://gridgain.com
[10:05:49]
[10:05:49] Quiet mode.
[10:05:50]   ^-- Logging by 'JavaLogger [quiet=true, config=null]'
[10:05:50]   ^-- To see **FULL** console log here add -DIGNITE_QUIET=false or "-v" to ignite.{sh|bat}
[10:05:50]
[10:05:50] OS: Mac OS X 10.12.1 x86_64
[10:05:50] VM information: Java(TM) SE Runtime Environment 1.8.0_111-b14 Oracle Corporation Java HotSpot(TM) 64-Bit Server VM 25.111-b14
[10:05:50] Please set system property '-Djava.net.preferIPv4Stack=true' to avoid possible problems in mixed environments.
[10:05:50] Initial heap size is 128MB (should be no less than 512MB, use -Xms512m -Xmx512m).
[10:05:50] Configured plugins:
[10:05:50]   ^-- None
[10:05:50]
[10:05:50] Configured failure handler: [hnd=StopNodeOrHaltFailureHandler [tryStop=false, timeout=0, super=AbstractFailureHandler [ignoredFailureTypes=UnmodifiableSet [SYSTEM_WORKER_BLOCKED, SYSTEM_CRITICAL_OPERATION_TIMEOUT]]]]
[10:05:50] Message queue limit is set to 0 which may lead to potential OOMEs when running cache operations in FULL_ASYNC or PRIMARY_SYNC modes due to message queues growth on sender and receiver sides.
[10:05:51] Security status [authentication=off, tls/ssl=off]
[10:05:53] REST protocols do not start on client node. To start the protocols on client node set '-DIGNITE_REST_START_ON_CLIENT=true' system property.
[10:05:54] Failed to send multicast message (is multicast enabled on this node?).
[10:05:56] Performance suggestions for grid '服务网格专用部署' (fix if possible)
[10:05:56] To disable, set -DIGNITE_PERFORMANCE_SUGGESTIONS_DISABLED=true
[10:05:56]   ^-- Enable G1 Garbage Collector (add '-XX:+UseG1GC' to JVM options)
[10:05:56]   ^-- Specify JVM heap max size (add '-Xmx<size>[g|G|m|M|k|K]' to JVM options)
[10:05:56]   ^-- Set max direct memory size if getting 'OOME: Direct buffer memory' (add '-XX:MaxDirectMemorySize=<size>[g|G|m|M|k|K]' to JVM options)
[10:05:56]   ^-- Disable processing of calls to System.gc() (add '-XX:+DisableExplicitGC' to JVM options)
[10:05:56] Refer to this page for more performance suggestions: https://apacheignite.readme.io/docs/jvm-and-system-tuning
[10:05:56]
[10:05:56] To start Console Management & Monitoring run ignitevisorcmd.{sh|bat}
[10:05:56]
[10:05:56] Ignite node started OK (id=03c7f394, instance name=服务网格专用部署)
[10:05:56] Topology snapshot [ver=2, locNode=03c7f394, servers=1, clients=1, state=ACTIVE, CPUs=4, offheap=0.12GB, heap=3.6GB]
[10:05:56]   ^-- Baseline [id=0, size=1, online=1, offline=0]
=> #'core/ignite
(to-array ["table_name"])
=> #object["[Ljava.lang.Object;" 0x25228c98 "[Ljava.lang.Object;@25228c98"]
(first (to-array ["table_name"]))
=> "table_name"
(when-let [rows (.getAll (.query (.cache ignite "my_meta_tables") (doto (SqlFieldsQuery. "SELECT m.column_name, m.column_type FROM table_item AS m INNER JOIN my_meta_tables AS o ON m.table_id = o.id WHERE o.table_name = ? AND m.pkid = 1")
                                                                     (.setArgs (to-array ["customers"])))))]
    (loop [[f & r] rows lst []]
        (if (some? f)
            (recur r (conj lst {:column_name (.get f 0) :column_type (.get f 1)}))
            lst)))
=> [{:column_name "customerid", :column_type "VARCHAR(5)"}]
(when-let [rows (.getAll (.query (.cache ignite "my_meta_tables") (doto (SqlFieldsQuery. "SELECT m.column_name, m.column_type FROM table_item AS m INNER JOIN my_meta_tables AS o ON m.table_id = o.id WHERE o.table_name = ? AND m.pkid = 1")
                                                                     (.setArgs (to-array ["orderdetails"])))))]
    (loop [[f & r] rows lst []]
        (if (some? f)
            (recur r (conj lst {:column_name (.get f 0) :column_type (.get f 1)}))
            lst)))
=> [{:column_name "orderid", :column_type "INTEGER"} {:column_name "productid", :column_type "INTEGER"}]
(when-let [rows (.getAll (.query (.cache ignite "my_meta_tables") (doto (SqlFieldsQuery. "SELECT m.column_name, m.column_type FROM table_item AS m INNER JOIN my_meta_tables AS o ON m.table_id = o.id WHERE o.table_name = ? AND m.pkid = 1")
                                                                     (.setArgs (to-array ["orderdetails"])))))]
    (loop [[f & r] rows sb (StringBuilder.)]
        (if (some? f)
            (if (some? r)
                (recur r (doto sb (.append (.get f 0)) (.append ",")))
                (recur r (doto sb (.append (.get f 0)))))
            (.toString sb))))
=> "orderid,productid"
(def igniteCache (.withKeepBinary (.cache ignite "orderdetails")))
=> #'core/igniteCache
(KvSql/getKeyType ignite "orderdetails")
=> "SQL_PUBLIC_ORDERDETAILS_44c217c8869c47ed649c92041f6b8e95_KEY"
(def keyBuilder (.builder (.binary ignite) (KvSql/getKeyType ignite "orderdetails")))
=> #'core/keyBuilder
(when-let [rows (.getAll (.query (.cache ignite "my_meta_tables") (doto (SqlFieldsQuery. "SELECT m.column_name, m.column_type FROM table_item AS m INNER JOIN my_meta_tables AS o ON m.table_id = o.id WHERE o.table_name = ? AND m.pkid = 1")
                                                                     (.setArgs (to-array ["orderdetails"])))))]
    (loop [[f & r] rows lst []]
        (if (some? f)
            (recur r (conj lst {:column_name (.get f 0) :column_type (.get f 1)}))
            lst)))
=> [{:column_name "orderid", :column_type "INTEGER"} {:column_name "productid", :column_type "INTEGER"}]
(def lis_item (when-let [rows (.getAll (.query (.cache ignite "my_meta_tables") (doto (SqlFieldsQuery. "SELECT m.column_name, m.column_type FROM table_item AS m INNER JOIN my_meta_tables AS o ON m.table_id = o.id WHERE o.table_name = ? AND m.pkid = 1")
                                                                                   (.setArgs (to-array ["orderdetails"])))))]
                  (loop [[f & r] rows lst []]
                      (if (some? f)
                          (recur r (conj lst (.get f 0)))
                          lst))))
=> #'core/lis_item
(println lis_item)
[orderid productid]
=> nil
(loop [[f & r] lis_item sb (StringBuilder.)]
    (if (some? f)
        (if (some? r)
            (recur r (doto sb (.append f) (.append ",")))
            (recur r (doto sb (.append f))))
        {:line (.toString sb) :lst lis_item}))
=> {:line "orderid,productid", :lst ["orderid" "productid"]}
(KvSql/getKeyType ignite "my_meta_tables")
=> "java.lang.Long"
